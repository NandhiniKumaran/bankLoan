CREATE TABLE USERS(
  USER_ID BIGSERIAL PRIMARY KEY,
  USERNAME VARCHAR(100) NOT NULL,
  PASSWORD VARCHAR(200) NOT NULL,
  EMAIL VARCHAR(200) NOT NULL

);

CREATE TABLE CREDIT_ACCOUNT(
  ACC_NO BIGSERIAL PRIMARY KEY,
  USER_ID BIGSERIAL NOT NULL,
  TOTAL_LIMIT DECIMAL(20, 2),
  CURRENCY CHAR(3) NOT NULL,
  START_DATE DATE,
  END_DATE DATE,
  TOTAL_LIMIT_HOME DECIMAL(20, 2),
  TOTAL_LIMIT_CAR DECIMAL(20, 2),
  CREATED_ON DATE,
  CREATED_BY VARCHAR(100),
  foreign key (USER_ID) references USERS(USER_ID)
);



CREATE TABLE LOAN(
  LOAN_NO BIGSERIAL PRIMARY KEY,
  ACC_NO BIGSERIAL NOT NULL,
  TYPE VARCHAR(10) NOT NULL,
  AMOUNT DECIMAL(20, 2),
  CURRENCY CHAR(3) NOT NULL,
  START_DATE  DATE,
  END_DATE  DATE,
  INTEREST_RATE DECIMAL(20, 2),
  PAYMENT_STATUS VARCHAR(10),
  CREATED_ON DATE,
  CREATED_BY VARCHAR(100),
  UPDATED_ON DATE,
  UPDATED_BY VARCHAR(100),
  foreign key (ACC_NO) references CREDIT_ACCOUNT(ACC_NO)
);

CREATE TABLE LOAN_PAYMENT_DETAILS(
  PAYMENT_NO BIGSERIAL PRIMARY KEY,
  LOAN_NO BIGSERIAL NOT NULL,
  PAID_AMOUNT DECIMAL(20, 2),
  PAID_DATE  DATE,
  REMARKS VARCHAR(10) NOT NULL,
  IS_DELETED BIT,
  CREATED_ON DATE,
  CREATED_BY VARCHAR(100),
  foreign key (LOAN_NO) references LOAN(LOAN_NO)
);

CREATE TABLE ROLES(
  ROLE_ID BIGSERIAL PRIMARY KEY,
  NAME VARCHAR(50) NOT NULL
);


CREATE TABLE USERS_ROLES(
  USER_ID BIGSERIAL NOT NULL,
  ROLE_ID BIGSERIAL NOT NULL,
  foreign key (USER_ID) references USERS(USER_ID),
  foreign key (ROLE_ID) references ROLES(ROLE_ID)

);